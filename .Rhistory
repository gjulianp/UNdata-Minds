view(datos)
datos
datos <- read.csv("datos_amoniaco.csv")
View(datos)
datos
datos <- read.csv("datos_amoniaco.csv",sep = ";")
datos
View(datos)
datos_CSV <- read.csv("precipitation.csv", header = TRUE)
View(datos_CSV)
install.packages("ggplot2")
library(ggplot2)
ggplot(datos, aes(x = date, y = precipitation)) +
geom_line() +
geom_point() +
labs(title = "Precipitación en BA",
x = "Fecha",
y = "Precipitación (mm)") +
theme_minimal()
ggplot(datos_CSV, aes(x = date, y = precipitation)) +
geom_line() +
geom_point() +
labs(title = "Precipitación en BA",
x = "Fecha",
y = "Precipitación (mm)") +
theme_minimal()
ggplot(datos_CSV, aes(x = date, y = precipitation, color = state, size = precipitation)) +
geom_point() +
labs(title = "Precipitación por Ciudad",
x = "Fecha",
y = "Precipitación (mm)",
color = "Ciudad",
size = "Precipitación") +
theme_minimal()
ggplot(datos_CSV, aes(x = date, y = precipitation, color = state)) +
geom_point() +
labs(title = "Precipitación por Ciudad",
x = "Fecha",
y = "Precipitación (mm)",
color = "Ciudad",
size = "Precipitación") +
theme_minimal()
# Crear el gráfico para el año 1999
ggplot(datos_1999, aes(x = date, y = precipitation, color = state, size = precipitation)) +
geom_point() +
labs(title = "Precipitación por Ciudad en 1999",
x = "Fecha",
y = "Precipitación (mm)",
color = "Ciudad",
size = "Precipitación") +
theme_minimal()
# Filtrar datos para un año específico (por ejemplo, 1999)
datos_1999 <- subset(datos_CSV, format(date, "%Y") == "1999")
# Filtrar datos para un año específico (por ejemplo, 1999)
datos_1999 <- subset(datos_CSV, format(date, "%Y") == "1999")
ggplot(datos_1999, aes(x = date, y = precipitation, color = state, size = precipitation)) +
geom_point() +
labs(title = "Precipitación por Ciudad en 1999",
x = "Fecha",
y = "Precipitación (mm)",
color = "Ciudad",
size = "Precipitación") +
theme_minimal()
ggplot(datos_CSV, aes(x = date, y = precipitation, color = state, size = precipitation)) +
geom_point() +
labs(title = "Precipitación por Ciudad en 1999",
x = "Fecha",
y = "Precipitación (mm)",
color = "Ciudad",
size = "Precipitación") +
theme_minimal()
# Convertir la columna 'date' al formato de fecha adecuado
datos_CSV['date'] = pd.to_datetime(datos_CSV['date'], format='%d/%m/%Y')
df = pd.DataFrame(datos_CSV)
library(dplyr)
# Convertir la columna de fecha al formato de fecha adecuado
datos_CSV$date <- as.Date(datos_CSV$date, format = "%d/%m/%Y")
# Filtrar solo los datos para los años 1998 y 1999
filtered_data <- datos_CSV %>%
filter(year(datos_CSV) %in% c(1998, 1999))
library(dplyr)
# Convertir la columna de fecha al formato de fecha adecuado
datos_CSV$date <- as.Date(datos_CSV$date, format = "%d/%m/%Y")
# Filtrar solo los datos para los años 1998 y 1999
filtered_data <- datos_CSV %>%
filter(year(date) %in% c(1998, 1999))
library(lubridate)
# Convertir la columna de fecha al formato de fecha adecuado
datos_CSV$date <- as.Date(datos_CSV$date, format = "%d/%m/%Y")
# Filtrar solo los datos para los años 1998 y 1999
filtered_data <- datos_CSV %>%
filter(year(date) %in% c(1998, 1999))
print(filtered_data)
ggplot(filtered_data, aes(x = date, y = precipitation, color = state)) +
geom_point() +
labs(title = "Precipitación por Ciudad en 1999",
x = "Fecha",
y = "Precipitación (mm)",
color = "Ciudad",
size = "Precipitación") +
theme_minimal()
# Crear el mapa de calor
mapa_calor <- ggplot(datos, aes(x = date, y = state, fill = precipitation)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +  # Define la paleta de colores
labs(title = "Mapa de calor de precipitación",
x = "Fecha",
y = "Ciudad",
fill = "Precipitación") +
theme_minimal()  # Establece un tema minimalista
datos<- read.csv("precipitation.csv", header = TRUE)
library(ggplot2)
# Crear el mapa de calor
mapa_calor <- ggplot(datos, aes(x = date, y = state, fill = precipitation)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +  # Define la paleta de colores
labs(title = "Mapa de calor de precipitación",
x = "Fecha",
y = "Ciudad",
fill = "Precipitación") +
theme_minimal()  # Establece un tema minimalista
# Crear el mapa de calor
mapa_calor <- ggplot(datos, aes(x = date, y = state, fill = precipitation)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "blue") +  # Define la paleta de colores
labs(title = "Mapa de calor de precipitación",
x = "Fecha",
y = "Ciudad",
fill = "Precipitación") +
theme_minimal()  # Establece un tema minimalista
# Mostrar el mapa de calor
print(mapa_calor)
library(ggplot2)
# Cargar datos desde el archivo CSV
datos <- read.csv("precipitation.csv", header = TRUE)
# Convertir la columna de fecha al formato de fecha adecuado
datos$date <- as.Date(datos$date)
# Convertir la columna de precipitación a numérica
datos$precipitation <- as.numeric(datos$precipitation)
# Crear el gráfico de dispersión
scatter_plot <- ggplot(datos, aes(x = date, y = precipitation)) +
geom_point(color = "blue") +
labs(title = "Gráfico de dispersión de precipitación por fecha",
x = "Fecha",
y = "Precipitación") +
theme_minimal()  # Establece un tema minimalista
# Mostrar el gráfico de dispersión
print(scatter_plot)
# Crear el gráfico de dispersión con colores por ciudad
scatter_plot <- ggplot(datos, aes(x = date, y = precipitation, color = city)) +
geom_point() +
labs(title = "Gráfico de dispersión de precipitación por fecha",
x = "Fecha",
y = "Precipitación",
color = "Ciudad") +
theme_minimal()  # Establece un tema minimalista
# Mostrar el gráfico de dispersión
print(scatter_plot)
# Crear el gráfico de dispersión con colores por ciudad
scatter_plot <- ggplot(datos, aes(x = date, y = precipitation, color = state)) +
geom_point() +
labs(title = "Gráfico de dispersión de precipitación por fecha",
x = "Fecha",
y = "Precipitación",
color = "Ciudad") +
theme_minimal()  # Establece un tema minimalista
# Mostrar el gráfico de dispersión
print(scatter_plot)
# Crear el gráfico de dispersión con colores por ciudad
scatter_plot <- ggplot(datos, aes(x = precipitation, y = date, color = state)) +
geom_point() +
labs(title = "Gráfico de dispersión de precipitación por fecha",
x = "Fecha",
y = "Precipitación",
color = "Ciudad") +
theme_minimal()  # Establece un tema minimalista
# Mostrar el gráfico de dispersión
print(scatter_plot)
# Crear el gráfico de dispersión con valores de precipitación dispersos
scatter_plot <- ggplot(datos, aes(x = 1, y = precipitation, color = state)) +  # Utiliza un eje X ficticio (1)
geom_point(position = position_jitter(width = 0.1), size = 2) +  # Agrega dispersión a los puntos
labs(title = "Valores de precipitación dispersos por ciudad",
x = NULL,  # Sin etiqueta en el eje X
y = "Precipitación",
color = "Ciudad") +
theme_minimal()  # Establece un tema minimalista
# Mostrar el gráfico de dispersión
print(scatter_plot)
# Crear el gráfico de dispersión con valores de precipitación dispersos
scatter_plot <- ggplot(datos, aes(x = precipitation, y = precipitation, color = state)) +  # Utiliza un eje X ficticio (1)
geom_point(position = position_jitter(width = 0.1), size = 2) +  # Agrega dispersión a los puntos
labs(title = "Valores de precipitación dispersos por ciudad",
x = NULL,  # Sin etiqueta en el eje X
y = "Precipitación",
color = "Ciudad") +
theme_minimal()  # Establece un tema minimalista
# Mostrar el gráfico de dispersión
print(scatter_plot)
# Crear el gráfico de puntos con agrupamiento por ciudad
grouped_plot <- ggplot(datos, aes(x = state, y = precipitation, color = state)) +
geom_point(position = position_jitter(width = 0.2), size = 2) +  # Agrega dispersión horizontal a los puntos
labs(title = "Gráfico de agrupamiento de precipitación por ciudad",
x = "Ciudad",
y = "Precipitación",
color = "Ciudad") +
theme_minimal() +  # Establece un tema minimalista
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rota las etiquetas del eje X para mayor legibilidad
# Mostrar el gráfico de agrupamiento
print(grouped_plot)
# Crear el diagrama de dispersión con colores por ciudad
scatter_plot <- ggplot(datos, aes(x = state, y = precipitation, color = state)) +
geom_jitter(width = 0.3, height = 0, size = 2) +  # Agrega dispersión horizontal a los puntos
labs(title = "Diagrama de dispersión de precipitación por ciudad",
x = "Ciudad",
y = "Precipitación",
color = "Ciudad") +
theme_minimal() +  # Establece un tema minimalista
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rota las etiquetas del eje X para mayor legibilidad
# Mostrar el diagrama de dispersión
print(scatter_plot)
# Crear el gráfico de dispersión sin eje X
scatter_plot <- ggplot(datos, aes(y = precipitation, color = state)) +
geom_point(position = position_jitter(width = 0.1), size = 2) +  # Agrega dispersión horizontal a los puntos
labs(title = "Gráfico de dispersión de precipitación",
y = "Precipitación",
color = "Ciudad") +
theme_minimal() +  # Establece un tema minimalista
theme(axis.title.x = element_blank(),  # Elimina el título y las etiquetas del eje X
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
# Crear el gráfico de dispersión sin eje X
scatter_plot <- ggplot(datos, aes(y = precipitation, color = state)) +
geom_point(position = position_jitter(width = 0.1), size = 2) +  # Agrega dispersión horizontal a los puntos
labs(title = "Gráfico de dispersión de precipitación",
y = "Precipitación",
color = "Ciudad") +
theme_minimal() +  # Establece un tema minimalista
theme(axis.title.x = element_blank(),  # Elimina el título y las etiquetas del eje X
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
# Mostrar el gráfico de dispersión
print(scatter_plot)
# Crear el gráfico de dispersión sin eje X
scatter_plot <- ggplot(datos, aes(y = precipitation, color = state)) +
geom_point(position = position_jitter(width = 0.1), size = 2) +  # Agrega dispersión horizontal a los puntos
labs(title = "Gráfico de dispersión de precipitación",
y = "Precipitación",
color = "Ciudad") +
theme_minimal() +  # Establece un tema minimalista
theme(axis.title.x = element_blank(),  # Elimina el título y las etiquetas del eje X
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
# Mostrar el gráfico de dispersión
print(scatter_plot)
# Crear una variable ficticia para el eje X
datos$dummy <- 1
# Crear el gráfico de dispersión sin eje X
scatter_plot <- ggplot(datos, aes(x = dummy, y = precipitation, color = city)) +
geom_point(position = position_jitter(width = 0.1), size = 2) +  # Agrega dispersión horizontal a los puntos
labs(title = "Gráfico de dispersión de precipitación",
x = NULL,  # Elimina el título y las etiquetas del eje X
y = "Precipitación",
color = "Ciudad") +
theme_minimal() +  # Establece un tema minimalista
theme(axis.title.x = element_blank(),  # Elimina el título y las etiquetas del eje X
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
# Mostrar el gráfico de dispersión
print(scatter_plot)
# Crear el gráfico de dispersión sin eje X
scatter_plot <- ggplot(datos, aes(x = dummy, y = precipitation, color = state)) +
geom_point(position = position_jitter(width = 0.1), size = 2) +  # Agrega dispersión horizontal a los puntos
labs(title = "Gráfico de dispersión de precipitación",
x = NULL,  # Elimina el título y las etiquetas del eje X
y = "Precipitación",
color = "Ciudad") +
theme_minimal() +  # Establece un tema minimalista
theme(axis.title.x = element_blank(),  # Elimina el título y las etiquetas del eje X
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
# Mostrar el gráfico de dispersión
print(scatter_plot)
# Filtrar datos para solo incluir 4 ciudades específicas
ciudades <- c("BA", "RR", "SE", "TO")
datos <- subset(datos, state %in% ciudades)
# Crear una variable ficticia para el eje X
datos$dummy <- 1
# Crear el gráfico de dispersión sin eje X
scatter_plot <- ggplot(datos, aes(x = dummy, y = precipitation, color = state)) +
geom_point(position = position_jitter(width = 0.1), size = 2) +  # Agrega dispersión horizontal a los puntos
labs(title = "Gráfico de dispersión de precipitación",
x = NULL,  # Elimina el título y las etiquetas del eje X
y = "Precipitación",
color = "Ciudad") +
theme_minimal() +  # Establece un tema minimalista
theme(axis.title.x = element_blank(),  # Elimina el título y las etiquetas del eje X
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
# Mostrar el gráfico de dispersión
print(scatter_plot)
datos <- read.csv("precipitation.csv",sep = ";")
